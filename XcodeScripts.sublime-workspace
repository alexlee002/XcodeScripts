{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"pbxp",
				"pbxprojfile"
			],
			[
				"xcode",
				"xcodeproj_path"
			],
			[
				"pa",
				"path"
			],
			[
				"tar",
				"targetobj"
			],
			[
				"remo",
				"removefile"
			],
			[
				"pbx",
				"PBXNODE_MAPPER"
			],
			[
				"target",
				"target_name"
			],
			[
				"xc",
				"xcproj"
			],
			[
				"x",
				"xcproj"
			],
			[
				"de",
				"deduplicate_paths"
			],
			[
				"envv",
				"envval"
			],
			[
				"obj",
				"objpath"
			],
			[
				"filere",
				"fileref"
			],
			[
				"acc",
				"accepted_owner"
			],
			[
				"using",
				"using_gb_stander"
			],
			[
				"if",
				"ifmain\tif __name__ == '__main__'"
			],
			[
				"iso",
				"isisolate"
			],
			[
				"ba",
				"bad_files"
			],
			[
				"buildf",
				"buildfile"
			],
			[
				"build",
				"buildphase"
			],
			[
				"file",
				"filerefobj"
			],
			[
				"val",
				"valid_childtype"
			],
			[
				"all",
				"allow_children_types"
			],
			[
				"ver",
				"verify"
			],
			[
				"root",
				"rootObj"
			],
			[
				"un",
				"unexist_dep"
			],
			[
				"depe",
				"dependencies"
			],
			[
				"lo",
				"logger"
			],
			[
				"bad",
				"bad_dep"
			],
			[
				"logg",
				"logger"
			],
			[
				"bpid",
				"bpid_dict"
			],
			[
				"remove",
				"removebuildphase"
			],
			[
				"ref",
				"ref_ids"
			],
			[
				"add",
				"add_referrer"
			],
			[
				"pbx_",
				"pbx_buildConfigurations"
			],
			[
				"res",
				"resolve"
			],
			[
				"has",
				"has_multiowner"
			],
			[
				"ow",
				"owners"
			],
			[
				"buil",
				"buildfile"
			],
			[
				"att",
				"attrval"
			],
			[
				"dic",
				"dictval"
			],
			[
				"expect",
				"expected_type"
			],
			[
				"pbx_tar",
				"pbx_targetProxy"
			],
			[
				"pbx_fi",
				"pbx_fileRef"
			],
			[
				"pb",
				"pbx_guid"
			],
			[
				"expe",
				"expectedtypes"
			],
			[
				"exp",
				"expectedtypes"
			],
			[
				"buildp",
				"buildphase"
			],
			[
				"path",
				"path_dict"
			],
			[
				"pat",
				"path_dict"
			],
			[
				"isol",
				"isisolate_ids"
			],
			[
				"gen",
				"gen_uuid"
			],
			[
				"isva",
				"isvalid"
			],
			[
				"exped",
				"expected_type"
			],
			[
				"expec",
				"expected_isa"
			],
			[
				"is",
				"is_valid"
			],
			[
				"expected",
				"expected_isa"
			],
			[
				"ch",
				"chid"
			],
			[
				"pbxg",
				"PBXGroup"
			],
			[
				"grou",
				"group"
			],
			[
				"group",
				"groupobj"
			],
			[
				"project",
				"projectobj"
			],
			[
				"id",
				"idents"
			],
			[
				"__printp",
				"__print_pbxobj"
			],
			[
				"curr",
				"current_isa"
			],
			[
				"can",
				"canonize"
			],
			[
				"attr",
				"attrsdict"
			],
			[
				"obje",
				"objects"
			],
			[
				"bak",
				"bakupfile"
			],
			[
				"des",
				"dest_file"
			],
			[
				"__pr",
				"__print_kv"
			],
			[
				"__print",
				"__print_dict"
			],
			[
				"sup",
				"supported_pbxattrs"
			],
			[
				"isolate",
				"isolateobjs"
			],
			[
				"logger",
				"Logger"
			],
			[
				"object",
				"object_by_id"
			],
			[
				"roo",
				"rootObject"
			],
			[
				"ob",
				"objectVersion"
			],
			[
				"_",
				"__getattribute__"
			],
			[
				"_comm",
				"_comment_changed"
			],
			[
				"_com",
				"_comment_changed"
			],
			[
				"el",
				"elif"
			],
			[
				"node",
				"node_by_id"
			],
			[
				"inst",
				"isinstance"
			],
			[
				"new",
				"new_val"
			],
			[
				"pro",
				"proj_dict"
			],
			[
				"PBX",
				"PBXNodeException"
			],
			[
				"loa",
				"load"
			],
			[
				"XC",
				"Xcode"
			],
			[
				"ins",
				"in_single_line"
			],
			[
				"__i",
				"__ident_str"
			],
			[
				"com",
				"__comments_for_node"
			],
			[
				"__con",
				"__canonical_value_str"
			],
			[
				"in",
				"in_single_line"
			],
			[
				"con",
				"confirms_to"
			],
			[
				"She",
				"shellScript"
			],
			[
				"va",
				"var_list"
			],
			[
				"pbxno",
				"PBXNode"
			],
			[
				"class",
				"classes"
			],
			[
				"proj",
				"proj_dict"
			],
			[
				"pr",
				"proj_dict"
			],
			[
				"_is",
				"_is_valid"
			],
			[
				"var",
				"var_name"
			],
			[
				"std",
				"stderr"
			],
			[
				"pbxpr",
				"pbxproj_file"
			],
			[
				"def",
				"defaultConfigurationIsVisible"
			],
			[
				"defau",
				"defaultConfigurationName"
			],
			[
				"bui",
				"buildConfigurationList"
			],
			[
				"_isva",
				"_is_valid"
			],
			[
				"_si",
				"_is_valid_guid"
			],
			[
				"projctr",
				"projectRoot"
			],
			[
				"projec",
				"projectDirPath"
			],
			[
				"prod",
				"productRefGroup"
			],
			[
				"pbxpro",
				"PBXProject"
			],
			[
				"proe",
				"productType"
			],
			[
				"produ",
				"productReference"
			],
			[
				"sour",
				"sourceTree"
			],
			[
				"source",
				"SOURCE_TREE_VALUES"
			],
			[
				"ex",
				"explicitFileType"
			],
			[
				"so",
				"sourceTree"
			],
			[
				"she",
				"shellScript"
			],
			[
				"shel",
				"shellPath"
			],
			[
				"ri",
				"runOnlyForDeploymentPostprocessing"
			],
			[
				"al",
				"al_display_name"
			],
			[
				"rn",
				"runOnlyForDeploymentPostprocessing"
			],
			[
				"pbxbu",
				"PBXBuildPhase"
			],
			[
				"remote",
				"remoteGlobalIDString"
			],
			[
				"_is_a",
				"_is_valid_guid"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 345.0,
		"last_filter": "pci",
		"selected_items":
		[
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"pcr",
				"Package Control: Remove Package"
			],
			[
				"pcu",
				"Package Control: Upgrade Package"
			],
			[
				"packagein",
				"Package Control: Install Package"
			]
		],
		"width": 448.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
	],
	"file_history":
	[
		"/Users/alexlee/workspace/github/RxSwift/scripts/common.sh",
		"/Users/alexlee/workspace/github/RxSwift/scripts/update-jazzy-docs.sh",
		"/Users/alexlee/Documents/adapter-pattern.py",
		"/Users/alexlee/Documents/bridge-pattern.py",
		"/Users/alexlee/workspace/baidu/netdisk/scripts/baidu/packet_netdisk.sh",
		"/Users/alexlee/workspace/github/XcodeScripts-2/libs/xcodeproj/pbxprinter.py",
		"/Users/alexlee/workspace/github/XcodeScripts-2/libs/xcodeproj/pbx/file.py",
		"/Users/alexlee/workspace/github/XcodeScripts-2/libs/xcodeproj/pbx/group.py",
		"/Users/alexlee/workspace/github/XcodeScripts-2/libs/xcodeproj/pbx/base.py",
		"/Users/alexlee/workspace/github/XcodeScripts-2/libs/test/test.py",
		"/Users/alexlee/workspace/Baidu/netdisk/BDNetDiskHostApp/scripts/baidu/hostapp.py",
		"/Users/alexlee/Desktop/test.pbxproj",
		"/Users/alexlee/workspace/Baidu/netdisk/BDNetDiskHostApp/export_lib_headers.sh",
		"/Users/alexlee/workspace/github/XcodeScripts/pbxprojConflictResolver/pbxproj_conflict_resolver.py",
		"/Users/alexlee/workspace/github/XcodeScripts/xcodeproj/pbxproj_conflict_resolver.py",
		"/Users/alexlee/workspace/github/XcodeScripts/pbxproj/pbxnode.py",
		"/Users/alexlee/workspace/github/XcodeScripts/pbxproj/pbxproj_conflict_resolver.py",
		"/Users/alexlee/workspace/github/XcodeScripts/pbxproj/pbxproj.py",
		"/Users/alexlee/workspace/github/XcodeScripts/pbxprojAutoMerge/pbxproj_auto_merge.py",
		"/Users/alexlee/workspace/github/XcodeScripts/utils/__init__.py",
		"/Users/alexlee/Library/Application Support/Sublime Text 3/Packages/User/sublime_jedi.sublime-settings",
		"/Users/baidu/Library/Application Support/Sublime Text 3/Packages/User/SublimePython.sublime-settings",
		"/Users/baidu/Desktop/testTrim.sh",
		"/Users/baidu/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/baidu/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/baidu/Library/Application Support/Sublime Text 3/Packages/sublime-text-markmon/sublime-text-markmon.sublime-settings",
		"/Users/baidu/workspace/github/SimpleModel/Podfile",
		"/Users/baidu/Downloads/Kiwi-master/Xcode Templates/install-templates.sh"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 134.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 48.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 153.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 114.0
	},
	"pinned_build_system": "",
	"project": "XcodeScripts.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
